html {
  --bg: white;
  //--bg: #232323;
  // --fg: #d8d8d8;


  background-color: var(--bg);
  color: var(--fg);
}

$pagew: 375px;
$imgw: 230px;
$scale: $imgw / $pagew;

.demo {
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.story-image {
  --image-width: 50vw;
  //--image-width: 181px;
  --image-height: var(--image-width);
  --loaded: 0;
  --not-loaded: 1;

	&, * {
    transition: all 1s cubic-bezier(0, 0, 0, 1);
	}

  &.--loaded {
    --loaded: 1;
    --not-loaded: 0;
  }

  position: relative;
  opacity: var(--loaded);
  //opacity: 1;

  .__image {
    position: relative;
    display: block;
    margin: 0 auto;
    width: var(--image-width);
    height: var(--image-height);
    border-radius: 100%;
  }

  $throne-skew-x: 25deg;

  .__throne {
    position: absolute;

    &.--bg {
      --rect-width: calc(var(--image-width) * .24);
      --rect-height: calc(var(--image-height) *.32);

      bottom: calc(var(--image-height) * .44 + 2px); // +2px for throne fg border
      width: var(--rect-width);
      height: var(--rect-height);

      opacity: 0.42;
      background-image: linear-gradient(180deg, #FFC777 0%, #F57B48 42%);

      --translate-x: calc(var(--rect-width) * -.30);
      --translate-x-with-transition: calc(var(--translate-x) + var(--not-loaded) * calc(var(--rect-width) / 4));
      transform:
        rotateY(calc(var(--flip) * 180deg))
        skewX(#{$throne-skew-x})
        translateX(var(--translate-x-with-transition))
        ;
    }

    &.--fg {
      --rect-width: calc(var(--image-width) * .125);
      --rect-height: calc(var(--image-height) * .44);

      bottom: 0;
      width: var(--rect-width);
      height: var(--rect-height);

      background-image: linear-gradient(180deg, #FFE2B1 0%, #FFCB71 100%);
      border: 1px solid rgba(255,232,199,0.55);
      box-shadow: 7px 2px 4px 0 rgba(71,71,71,0.09);

      --rotate-y: calc(var(--flip) * 180deg);
      --rotate-y-with-transition: calc(var(--rotate-y) + var(--not-loaded) * -60deg);
      transform:
        // fix for safari
        // when safari rotates the right rectangle around the Y axis,
        // it moves behind the image. to get the rectangle in front of
        // the image, we need to manually move the rectangle up the Z axis.
        // translate by a big number to compensate for the transition.
        translateZ(1000px)

        rotateY(var(--rotate-y-with-transition))
        skewX(#{$throne-skew-x})
        translateX(calc(var(--rect-width) * .1))
        ;
    }

    &.--l {
      --flip: 0;
      left: 0;
    }

    &.--r {
      --flip: 1;
      right: 0;
    }
  }


  .__crown {

    $source-crown-width: 350px;
    $source-crown-height: 292px;
    --aspect-ratio: #{$source-crown-width / $source-crown-height};

    --crown-width: calc(var(--image-width) * .25);
    --crown-height: calc(var(--crown-width) / var(--aspect-ratio) + .5px); // +.5px to round up

    --angle: 37deg;

    // distance between image and crown. ~5px when image is 180px
    // +.5px to round up
    --gap: calc(var(--image-width) * .03 + .5px);

    --angle-with-transition: calc(var(--angle) + var(--not-loaded) * -3deg);
    --gap-with-transition: var(--gap); // disable this transition for now

    position: absolute;
    top: 50%;
    left: 50%;

    // start at the center of the image, rotate, and move outside
    transform:
      translate(-50%, -50%)
      rotate(var(--angle-with-transition))
      translateY(calc(var(--gap-with-transition) * -1))
      translateY(calc(var(--crown-height) / -2))
      translateY(calc(var(--image-height) / -2));

    width: var(--crown-width);
    height: var(--crown-height);
    background: url('/assets/crown.png');
    background-size: cover;
  }

  .__star {
    $source-star-width: 16px;
    $source-star-height: 24px;
    --aspect-ratio: #{$source-star-width / $source-star-height};

    --scale: 1;
    --star-width: calc(var(--image-width) * .09 * var(--scale));
    --star-height: calc(var(--star-width) / var(--aspect-ratio));

    width: var(--star-width);
    height: var(--star-height);

    position: absolute;

    &.--1 {
      top: -2%;
      left: 4%;
    }

    &.--2 {
      --scale: 1.2;
      top: 11%;
      right: -3%;
    }

    &.--3 {
      top: 1%;
      right: -13%;
    }
  }
}

.story-detail-page {

  text-align: center;

  .__header {
    height: 44px;
    line-height: 44px;
    background-color: #333;
    text-align: center;
    color: #444;
  }

  .__image-wrapper {
    position: relative;

    --image-width: 230px;
    --image-height: var(--image-width);

    .__image {
      display: block;
      margin: 20px auto;
      width: var(--image-width);
      height: var(--image-height);
      border-radius: 100%;
    }

    .__crown {

      --crown-width: 46px;
      --crown-height: 39px;

      --angle: 37deg;
      --gap: 5px; // distance between image and crown

      position: absolute;
      top: 50%;
      left: 50%;

      // start at the center of the image, rotate, and move outside
      transform:
        translate(-50%, -50%)
        rotate(var(--angle))
        translateY(calc(var(--gap) * -1))
        translateY(calc(var(--crown-height) / -2))
        translateY(calc(var(--image-height) / -2));

      width: var(--crown-width);
      height: var(--crown-height);
      background: url('/assets/crown.png');
    }
  }

  .__title {
    font-family: AmazonEmber-Bold;
    margin: 20px 0 10px;
  }

  .__author {
    color: #b8b8b8;
    margin: 10px 0 20px;
  }
}
